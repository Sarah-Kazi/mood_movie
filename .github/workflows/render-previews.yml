name: Render Deploy Previews
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check if Render preview deployed
        uses: actions/github-script@v6
        with:
          script: |
            // Wait for Render to create the preview (2 minutes)
            await new Promise(resolve => setTimeout(resolve, 120000));
            
            
            const renderServiceName = "mood-movie-d0jh";
            
            // Construct the preview URL manually since Render doesn't always provide environment_url
            const prNumber = context.payload.pull_request.number;
            const branchSlug = context.payload.pull_request.head.ref
              .toLowerCase()
              .replace(/[^a-z0-9]/g, '-')
              .substring(0, 30); // Render has character limits
              
            const previewUrl = `https://pr-${prNumber}-${branchSlug}-${renderServiceName}.onrender.com`;
            const commitSha = context.payload.pull_request.head.sha.substring(0, 7);
            
            // Create the comment
            const commentBody = `
### Render Deploy Preview Ready!

| Name | Link |
|------|------|
| **Preview URL** | [${previewUrl}](${previewUrl}) |
| **Branch** | \`${context.payload.pull_request.head.ref}\` |
| **Latest Commit** | \`${commitSha}\` |
| **Deploy Logs** | [View in Render](https://dashboard.render.com/web/sites/${renderServiceName}) |

**Test this PR on mobile:** Open the preview URL on your device

---

*This preview will be automatically deleted when the PR is closed.*
            `;
            
            // Check if comment already exists
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('Render Deploy Preview Ready')
            );
            
            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: commentBody
              });
            }